{"version":3,"file":"static/js/575.d76f7af2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 30px;\n  letter-spacing: 0.06em;\n   margin-bottom: 20px;\n   border: 3px solid #342e69;\n   padding: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  color: black;\n  font-size: 15px;\n  letter-spacing: 0.06em;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  background-color: #fff;\n  box-shadow: 0 1px 6px 0 #20212447;\n  font-size: 15px;\n  &:focus {\n    color: black;\n    font-size: 15px;\n  }\n  margin-top: 5px;\n  letter-spacing: 0.06em;\n  \n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 10px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 2px solid #342e69;\n  background-color: #d4d0f5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n  background-color: #342e69;  \n  color: #ffff;\n  }\n  cursor: pointer;\n  margin-right: auto;\n  margin-left: auto;\n  letter-spacing: 0.06em;\n  \n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","\nimport styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n   margin-top: 10px;\n   letter-spacing: 0.06em;\n   \n`;\n\nexport const Label = styled.label`\n  color: #000;\n  font-size: 15px;\n letter-spacing: 0.06em;\n`;\n\nexport const Input = styled.input`\n \n  font-size: 15px;\n  padding: 8px 12px;\n  margin: 0 auto;\n  border-radius: 6px;\n  border: none;\n  outline: 0;\n  box-shadow: 0 1px 6px 0 #20212447;\n  font-size: 15px;\n  &:focus {\n    color: black;\n    font-size: 15px;\n  }\n   letter-spacing: 0.06em;\n`;","import { Div, Label, Input } from './ContactFilter.styled';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const ContactFilter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <Div>\n      <Label>Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Enter a name to search\" />\n    </Div>\n  );\n};\n","import { useState } from 'react';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n     const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n     <>\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Please enter name...\"\n          \n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Please enter phone number...\"\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add contact{' '}\n     </Button>\n      </Form>\n      <ContactFilter />\n    </>\n  );\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  \n  border-radius: 30px;\n  list-style: none;\n  margin-right: auto;\n  margin-left: auto;\n  letter-spacing: 0.06em;\n  border: 3px solid #342e69;\n  padding: 30px;\n`;\n\nexport const Item = styled.li`\n \n  padding: 5px 20px 10px 20px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 15px;\n  font-weight: 400;\n  text-transform: uppercase;\n  letter-spacing: 0.06em;\n  \n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 2px solid #342e69;\n\n  background-color: #d4d0f5;\n\n  &:hover,\n  &:focus {\n  background-color: #342e69;\n  color: #ffff;\n  }\n  cursor: pointer;\n  letter-spacing: 0.06em;\n   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;","import React from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          {\n            <Button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              Delete\n            </Button>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport  ContactForm  from 'components/ContactForm/ContactForm';\nimport { ContactList }  from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts()); \n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm /> \n      <div>{isLoading && <Loader />}</div>{' '}\n      <ContactList /> \n    </>\n  );\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectLoading","contacts","isLoading","selectContacts","items","selectFilteredContacts","contact","toLowerCase","includes","Div","ContactFilter","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","type","onChange","event","normalizedValue","target","changeFilter","placeholder","nameInputId","nanoid","numberInputId","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","_event$currentTarget","currentTarget","_Fragment","onSubmit","preventDefault","some","alert","addContacts","htmlFor","pattern","title","required","List","Item","ContactList","onClick","deleteContacts","id","Tasks","useEffect","fetchContacts","ContactForm","Loader"],"sourceRoot":""}